{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.sass","components/Dialogs/Content/Content.module.sass","components/Dialogs/Content/Members/Members.module.sass","components/Dialogs/Content/Members/Member/Member.module.sass","components/Dialogs/Content/Messages/Messages.module.sass","components/Dialogs/Content/Messages/Message/Message.module.sass","components/Dialogs/Content/Members/Member/Member.jsx","components/Dialogs/Content/Members/Members.jsx","components/Dialogs/Content/Messages/Message/Message.jsx","components/Dialogs/Content/Messages/Messages.jsx","components/Dialogs/Content/Messages/MessagesContainer.jsx","components/Dialogs/Content/Members/MembersContainer.jsx","components/Dialogs/Content/Content.jsx","components/Dialogs/Dialogs.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","Member","className","mod","item","name","Members","members","map","el","index","Message","message","avatar","src","alt","text","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","maxLength50","Messages","messages","values","addNewMessage","newMessageText","compose","dialogs","dispatch","addMessageAC","MembersContainer","propTypes","PropTypes","object","Content","content","MessagesContainer","propsTypes","Dialogs","title"],"mappings":"sNAIaA,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKC,MAAMC,OAGJ,kBAACJ,EAAcE,KAAKC,OAFpB,kBAAC,IAAD,CAAUE,GAAG,eAJW,GACXC,IAAMN,WAkBtC,OAFqCO,aANJ,SAACC,GAC9B,MAAO,CACHJ,OAAQI,EAAMC,KAAKL,UAIUG,CAAoCN,K,oBCpB7ES,EAAOC,QAAU,CAAC,MAAQ,yB,oBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,wB,2ICa3GC,EATA,SAACT,GAEZ,OACI,yBAAKU,UAAWC,IAAIC,MAChB,kBAAC,IAAD,CAASV,GAAI,YAAcF,EAAMY,MAAOZ,EAAMa,QCO3CC,EAXC,SAACd,GAEb,IAAIa,EAAOb,EAAMe,QAAQC,KAAI,SAACC,EAAIC,GAAL,OAAgB,kBAAC,EAAD,CAAQL,KAAMI,EAAIL,KAAMM,EAAM,OAE3E,OACI,yBAAKR,UAAWC,IAAII,SACfF,I,oCCOEM,EAdC,SAACnB,GAEb,OACI,yBAAKU,UAAWC,IAAIS,SAChB,yBAAKV,UAAWC,IAAIU,QAChB,yBACIC,IAAKtB,EAAMoB,QAAQC,OAAQE,IAAI,mBAEvC,yBAAKb,UAAWC,IAAIE,MAAOb,EAAMoB,QAAQP,MACzC,yBAAKH,UAAWC,IAAIa,MAAOxB,EAAMoB,QAAQA,W,iCCwB/CK,EAAmBC,YAAU,CAC/BC,KAAM,cADeD,EAXJ,SAAC1B,GAClB,OACI,0BAAM4B,SAAU5B,EAAM6B,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAY,kBAAkBC,UAAWC,IAAUpB,KAAK,iBACxDqB,SAAU,CAACC,IAAUC,OAE5B,2CAWGC,EAlCE,SAACrC,GAEd,IACIoB,EADWpB,EAAMsC,SACEtB,KAAI,SAACC,EAAIC,GAAL,OAAe,kBAAC,EAAD,CAASE,QAASH,EAAIL,KAAMM,OAMtE,OACI,yBAAKR,UAAWC,IAAI2B,UACflB,EACD,kBAACK,EAAD,CAAkBG,SAPN,SAACW,GACjBvC,EAAMwC,cAAcD,EAAOE,qB,iDC0BpBC,oBACX9C,IACAQ,aArBoB,SAACC,GACrB,MAAM,CACFiC,SAAUjC,EAAMsC,QAAQL,SACxBG,eAAgBpC,EAAMsC,QAAQF,eAC9BxC,OAAQI,EAAMC,KAAKL,WAGA,SAAC2C,GACxB,MAAM,CACFJ,cAAe,SAACC,GACZG,EAASC,YAAaJ,SASnBC,CAGbL,GC/BaS,EAFU1C,aAND,SAACC,GAErB,MAAO,CACHU,QAASV,EAAMsC,QAAQ5B,WAGNX,CAAyBU,GAIlDA,EAAQiC,UAAY,CAChB1C,MAAO2C,IAAUC,QCRrB,IAAMC,EAAU,WAEZ,OACI,yBAAKxC,UAAWC,IAAIwC,SAChB,kBAAC,EAAD,MACA,kBAACC,EAAD,QAKGF,IAEfA,EAAQG,WAAa,CACjBhD,MAAO2C,IAAUC,QCJNK,UAZC,WAEZ,OACI,yBAAK5C,UAAWC,IAAIgC,SAChB,yBAAKjC,UAAWC,IAAI4C,OAApB,WACA,kBAAC,EAAD","file":"static/js/3.43d096d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth){\r\n                return <Redirect to='/Login'/>\r\n            } else {\r\n                return <Component {...this.props}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Dialogs_title__31XDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__2Ti2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"members\":\"Members_members__3omdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Member_item__1uecS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2e6nA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3tzZX\",\"avatar\":\"Message_avatar__3HIaz\",\"name\":\"Message_name__LhZkM\",\"text\":\"Message_text__3fX2g\"};","import React from 'react';\r\nimport mod from './Member.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Member = (props) => {\r\n\r\n    return (\r\n        <div className={mod.item}>\r\n            <NavLink to={\"/Dialogs/\" + props.item}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Member;\r\n\r\nMember.propTypes = {\r\n    item: PropTypes.number,\r\n    name: PropTypes.string\r\n};","import React from 'react';\r\nimport mod from './Members.module.sass';\r\nimport Member from './Member/Member';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Members = (props) => {\r\n\r\n    let name = props.members.map((el, index) =>  <Member name={el} item={index+1}/> );\r\n\r\n    return (\r\n        <div className={mod.members}>\r\n            {name}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Members;\r\n\r\nMembers.propTypes = {\r\n    state: PropTypes.object\r\n};","import React from 'react';\r\nimport mod from './Message.module.sass';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={mod.message}>\r\n            <div className={mod.avatar}>\r\n                <img\r\n                    src={props.message.avatar} alt=\"messageAvatar\"/>\r\n            </div>\r\n            <div className={mod.name}>{props.message.name}</div>\r\n            <div className={mod.text}>{props.message.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n\r\nMessage.propTypes = {\r\n    item: PropTypes.number,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    message: PropTypes.object\r\n};","import React from 'react';\r\nimport mod from './Messages.module.sass';\r\nimport Message from './Message/Message';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength50, required} from \"../../../../helpers/Validators\";\r\nimport {Textarea} from \"../../../Forms/FormsControl\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    let messages = props.messages;\r\n    let message = messages.map((el, index) => <Message message={el} item={index}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addNewMessage(values.newMessageText);\r\n    };\r\n\r\n    return (\r\n        <div className={mod.messages}>\r\n            {message}\r\n            <MessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessagesForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder='...your message' component={Textarea} name='newMessageText'\r\n                   validate={[required, maxLength50]}/>\r\n            {/*<textarea onChange={updateNewMessage} ref={newTextMessage} value={props.newMessageText}></textarea>*/}\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'newMessage'\r\n})(MessagesForm);\r\n\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {addMessageAC} from \"../../../../redux/dialogsReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n/*const MessagesContainer = ({dialogs, store}) => {\r\n\r\n    let addNewMessage = () => {\r\n        store.dispatch(addMessageAC());\r\n    };\r\n\r\n    let updateNewMessage = (text) => {\r\n        let action = updateMessageAC(text);\r\n        store.dispatch(action);\r\n    };\r\n\r\n    return (<Messages addNewMessage={addNewMessage} updateNewMessage={updateNewMessage}\r\n                    messages={dialogs.messages} newMessageText={dialogs.newMessageText}/>);\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        messages: state.dialogs.messages,\r\n        newMessageText: state.dialogs.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addNewMessage: (newMessageText) => {\r\n            dispatch(addMessageAC(newMessageText));\r\n        }\r\n    }\r\n};\r\n\r\n/*const MessagesContainer = withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Messages)); //один из вариантов оборачивания компонент контейнерными*/\r\n\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Messages);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Members from \"./Members\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        members: state.dialogs.members\r\n    }\r\n};\r\nconst MembersContainer = connect(mapStateToProps)(Members);\r\n\r\nexport default MembersContainer;\r\n\r\nMembers.propTypes = {\r\n    state: PropTypes.object\r\n};","import React from 'react';\r\nimport mod from './Content.module.sass';\r\nimport Members from './Members/Members';\r\nimport Messages from './Messages/Messages';\r\nimport PropTypes from 'prop-types';\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport MembersContainer from \"./Members/MembersContainer\";\r\n\r\nconst Content = () => {\r\n\r\n    return (\r\n        <div className={mod.content}>\r\n            <MembersContainer />\r\n            <MessagesContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n\r\nContent.propsTypes = {\r\n    state: PropTypes.object\r\n};","import React from 'react';\r\nimport mod from './Dialogs.module.sass';\r\nimport Content from './Content/Content';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Dialogs = () => {\r\n\r\n    return(\r\n        <div className={mod.dialogs}>\r\n            <div className={mod.title}>DIALOGS</div>\r\n            <Content\r\n                // store={store} dialogs={dialogs}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\nDialogs.propTypes = {\r\n};"],"sourceRoot":""}